name: Poll App CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      action:
        description: "Type 'destroy' to confirm destruction of resources"
        required: true
        default: "cancel"

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' # skip build on destroy

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        run: |
          IMAGE_REPO_NAME=poll-app
          IMAGE_TAG=${{ github.sha }}
          docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$IMAGE_REPO_NAME:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$IMAGE_REPO_NAME:$IMAGE_TAG

      - name: Save image URI
        run: echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/poll-app:${{ github.sha }}" >> $GITHUB_ENV

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan & Apply
        run: |
          terraform plan -var="app_image=${{ IMAGE_URI=514670561567.dkr.ecr.***.amazonaws.com/poll-app:307d8a09e87c3949ca587f9dfda8d5b4d9e949f9 }}" -out=tfplan
          terraform apply -auto-approve tfplan

      - name: Output ALB DNS
        run: terraform output -raw alb_dns

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
      - name: Confirm Destruction
        run: echo "Resources have been destroyed."

